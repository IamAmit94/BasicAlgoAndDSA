
099 Visualgo-Sorting-Click-Radix-Sort-
https://visualgo.net/en/sorting

099 Slides
https://cs.slides.com/colt_steele/intermediate-sorting-algorithms



RADIX SORT
1. Radix sort is a special sorting algorithm that works on lists of numbers
2. It never makes comparisons between elements!
3. It exploits the fact that information about the size of a number is encoded in the number of digits.
4. More digits means a bigger number!

RADIX SORT HELPER
1. In order to implement radix sort, it's helpful to build a few helper functions first:

2. getDigit(num, place) - returns the digit in num at the given place value

function getDigit(num, i) {
  return Math.floor(Math.abs(num) / Math.pow(10, i)) % 10;
}

3. digitCount(num) - returns the number of digits in num

function digitCount(num) {
  if (num === 0) return 1;
  return Math.floor(Math.log10(Math.abs(num))) + 1;
}

4. mostDigits(nums) - Given an array of numbers, returns the number of digits in the largest numbers in the list

function mostDigits(nums) {
  let maxDigits = 0;
  for (let i = 0; i < nums.length; i++) {
    maxDigits = Math.max(maxDigits, digitCount(nums[i]));
  }
  return maxDigits;
}


PSEUDOCODE FOR RADIX SORT

1. Define a function that accepts list of numbers
2. Figure out how many digits the largest number has
3. Loop from k = 0 up to this largest number of digits
4. For each iteration of the loop:
   4.1 Create buckets for each digit (0 to 9)
   4.2 place each number in the corresponding bucket based on its kth digit
5. Replace our existing array with values in our buckets, starting with 0 and going up to 9
6. return list at the end!







# RECAP

1. Merge sort and quick sort are standard efficient sorting algorithms
2. Quick sort can be slow in the worst case, but is comparable to merge sort on average
3. Merge sort takes up more memory because it creates a new array (in-place merge sorts exist, but they are really complex!)
4. Radix sort is a fast sorting algorithm for numbers
5. Radix sort exploits place value to sort numbers in linear time (for a fixed number of digits)